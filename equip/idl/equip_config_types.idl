/*
<COPYRIGHT>

Copyright (c) 2004-2005, University of Nottingham
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 - Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.

 - Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

 - Neither the name of the University of Nottingham
   nor the names of its contributors may be used to endorse or promote products
   derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

</COPYRIGHT>

Created by: Chris Greenhalgh (University of Nottingham)
Contributors:
  Chris Greenhalgh (University of Nottingham)

*/
/*

  File:    equip_config_types.idl
  $Id: equip_config_types.idl,v 1.1.1.1 2005/03/08 16:17:17 cgreenhalgh Exp $
  Created:  17/5/2001
  Author:  Chris Greenhalgh

  Purpose:
  simple configuration service

  To do:

  Change History:
  $Log: equip_config_types.idl,v $
  Revision 1.1.1.1  2005/03/08 16:17:17  cgreenhalgh
  From Nottingham CVS

  Revision 1.2  2005/03/08 14:36:25  cmg
  added BSD license

  Revision 1.1  2004/07/15 08:12:10  cmg
  initial copy from Equator/Modules/equip//include

  Revision 1.3  2003/06/20 12:18:11  cmg
  more comments

  Revision 1.2  2002/09/23 15:23:03  cmg
  all comments made javadoc comments

  Revision 1.1  2001/05/21 08:45:04  cmg
  initial revision

*/

/*======================================================================*/
/* includes */

#include "eqCoreTypes.idl"
#include "eqBasicTypes.idl"

/*======================================================================*/
/* begin equip namespace */

module equip {
  module config {

    /*------------------------------------------------------------*/
    /* config singleton. */

    /** name/value pair - element of configuration (IDL'd in 
     * equip_config_types.idl). */
    valuetype NameValuePair {
      /** name of name,value pair */
      public string name;
      /** value of name,value pair */
      public string value;
      /** priority (high value takes priority). */
      public long rating; 
    }; 
    /** array of Name/value pairs (IDL'd in equip_config_types.idl). */
    typedef sequence<NameValuePair> NameValuePairs;

    /** Configuration manager for providing an application's
     * configuration information, normally from property files (IDL'd
     * in equip_config_types.idl).
     *
     * <b>Note:</b> always use a single creating with 
     * {@link equip.runtime.SingletonManager}. */
    valuetype ConfigManager {
      /** Finds and reads name':'value pairs, one per line.
       * Also allows name '{' ... '}' as prepending 'name.' to 
       * enclosed names.
       * default search path is (to effect of) '.:${EQUIP_PATH}'
       */
      equip::runtime::Status readConfigFile(in string filename, 
					    in long rating,
					    in string extraPath);

      /** get a boolean configuration value (true = 'y', 't', '1') */
      boolean getBooleanValue(in string name, in boolean defaultValue);
      /** get a character configuration value */
      char getCharValue(in string name, in char defaultValue);
      /** get a IDL long (Java int) configuration value */
      long getLongValue(in string name, in long defaultValue);
      /** get a short configuration value */
      string getStringValue(in string name, in string defaultValue);
      /** get a float configuration value */
      float getFloatValue(in string name, in float defaultValue);
      /** get a double configuration value */
      double getDoubleValue(in string name, in double defaultValue);
      /** get a configuration value as a {@link
          equip.runtime.ValueBase} */
      equip::runtime::ValueBase getObjectValue(in string name, 
					       in equip::runtime::ValueBase 
					       defaultValue);

      /** the configuration manager's internal name,value pairs */
      public NameValuePairs entries;
    };

    /*------------------------------------------------------------*/
    /* end equip namespace */
    
  }; /* module config */
}; /* module equip */

/*======================================================================*/
/* EOF */    
