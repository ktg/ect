/*
<COPYRIGHT>

Copyright (c) 2004-2005, University of Nottingham
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 - Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.

 - Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

 - Neither the name of the University of Nottingham
   nor the names of its contributors may be used to endorse or promote products
   derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

</COPYRIGHT>

Created by: Chris Greenhalgh (University of Nottingham)
Contributors:
  Chris Greenhalgh (University of Nottingham)

*/
/*

  File:    eqTraderTypes.idl
  $Id: eqTraderTypes.idl,v 1.1.1.1 2005/03/08 16:17:17 cgreenhalgh Exp $
  Created:  15/03/2001
  Author:  Chris Greenhalgh

  Purpose:
  simple trading service

  To do:

  Change History:
  $Log: eqTraderTypes.idl,v $
  Revision 1.1.1.1  2005/03/08 16:17:17  cgreenhalgh
  From Nottingham CVS

  Revision 1.2  2005/03/08 14:36:24  cmg
  added BSD license

  Revision 1.1  2004/07/15 08:12:09  cmg
  initial copy from Equator/Modules/equip//include

  Revision 1.6  2003/06/20 12:40:26  cmg
  more comments

  Revision 1.5  2002/09/23 15:23:05  cmg
  all comments made javadoc comments

  Revision 1.4  2002/05/13 21:36:56  cmg
  comments to javadoc format

  Revision 1.3  2001/04/09 10:06:51  cmg
  added deactivate callback on failed proxy

  Revision 1.1.1.1  2001/04/01 08:40:56  Administrator
  initial - going to chi

  Revision 1.2  2001/03/30 09:14:52  cmg
  trader moniker rebinds moniker (not valuebase)

  Revision 1.1.1.1  2001/03/27 12:22:34  cmg
  Initial import to CVS - in progress

*/

/*======================================================================*/
/* includes */

#include "eqNetTypes.idl"

/*======================================================================*/
/* begin equip namespace */

module equip {
  module net {

    /*------------------------------------------------------------*/
    /** Simple name-based service trader interface and proxy (client)
     * (IDL'd in eqTraderTypes.idl) */
    valuetype TraderProxy : ServiceProxy {
      /** return proxy registered for name */
      runtime::ValueBase lookup(in string name, in string classname);
      /** true = added (i.e. not already present) */
      boolean bind(in string name, in runtime::ValueBase proxy);
      /** true = ok */
      boolean rebind(in string name, in runtime::ValueBase proxy);

      /** helper for generating bootstrap monikers for a trader.
       * default to local host and default port
       */
      Moniker getMonikerDefault();
      /** helper for generating bootstrap monikers for a trader.
       * default to local host
       */
      Moniker getMonikerFromPort(in unsigned short port);
      /** helper for generating bootstrap monikers for a trader. */
      Moniker getMonikerFromHost(in string host, in unsigned short port);
      /** helper for generating bootstrap monikers for a trader. */
      Moniker getMonikerFromAddr(in unsigned long addr, 
				 in unsigned short port);
    };

    /** default trader port (7883)
     * (IDL'd in eqTraderTypes.idl). */
    const unsigned short DEFAULT_TRADER_PORT = 7883;
    
    /*------------------------------------------------------------*/
    /** moniker that uses the trader to look up another moniker
     * (IDL'd in eqTraderTypes.idl) */
    
    valuetype TraderMoniker : Moniker {
      // overrides SimpleMoniker resolve();
      
      /** The (simple?) moniker of the trader itself */
      public Moniker trader;
      /** the name of the class wanted from the trader */
      public string classname;
      /** the name with which the instance is registered with the trader
       * (as in EQUIP trader URL) */
      public string name;

      /** Ask moniker to contact the specific trader and
       * (re)register itself.
       *
       * @return true = ok */
      boolean rebind(in Moniker proxyMoniker);
    };

    /*------------------------------------------------------------*/
    /* internal message types and bindings */
    
    /** internal - lookup */
    valuetype TraderLookup {
      public string name;
      public string classname; // checked via downcast (i.e. subtype)
    };

    /** internal - record = result */
    valuetype TraderRecord {
      public string name;
      public runtime::ValueBase binding;
    };

    /** internal - rebind request */
    valuetype TraderRebind : TraderRecord {
      public boolean replaceFlag;
    };
    /** internal - rebind reply */
    valuetype TraderRebindReply {
      public boolean okFlag;
    };

    /*------------------------------------------------------------*/
    /* end equip namespace */
    
  }; /* module net */
}; /* module equip */

/*======================================================================*/
/* EOF */    
